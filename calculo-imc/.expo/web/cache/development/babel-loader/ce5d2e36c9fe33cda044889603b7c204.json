{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      peso = _useState2[0],\n      setPeso = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      altura = _useState4[0],\n      setAltura = _useState4[1];\n\n  var handleSubmit = function handleSubmit() {\n    if (peso == '' || altura == '') {\n      Alert.alert('Erro', 'Preencha todos os campos!');\n    } else {\n      var imc = peso / (altura * altura);\n\n      if (imc < 18.6) {\n        Alert.alert('Abaixo do peso', 'IMC: ' + imc.toFixed(2));\n      } else if (imc >= 18.6 && imc <= 24.9) {\n        Alert.alert('Peso normal', 'IMC: ' + imc.toFixed(2));\n      } else if (imc >= 25) {\n        Alert.alert('Sobrepeso', 'IMC: ' + imc.toFixed(2));\n      }\n    }\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Calculadora de IMC\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Peso(Kg)\",\n      placeholderTextColor: \"#999\",\n      keyboardType: \"numeric\",\n      maxLength: 3,\n      value: peso,\n      onChangeText: setPeso\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Altura(m)\",\n      placeholderTextColor: \"#999\",\n      keyboardType: \"numbers-and-punctuation\",\n      maxLength: 4,\n      value: altura,\n      onChangeText: setAltura\n    }), _jsx(Button, {\n      title: \"Calcular\",\n      onPress: handleSubmit\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleSubmit,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Calcular\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  title: {\n    textAlign: 'center',\n    marginTop: 25,\n    fontSize: 30\n  },\n  input: {\n    backgroundColor: '#121212',\n    borderRadius: 10,\n    margin: 15,\n    padding: 10,\n    color: '#FFF',\n    fontSize: 23\n  },\n  button: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: 15,\n    backgroundColor: '#41Aef4',\n    padding: 10\n  },\n  buttonText: {\n    color: '#FFF',\n    fontSize: 25\n  }\n});","map":{"version":3,"sources":["/home/joaoguilherme/codigos/UFFTECH/calculo-imc/calculo-imc/App.js"],"names":["React","useState","App","peso","setPeso","altura","setAltura","handleSubmit","Alert","alert","imc","toFixed","styles","container","title","input","button","buttonText","StyleSheet","create","flex","justifyContent","textAlign","marginTop","fontSize","backgroundColor","borderRadius","margin","padding","color","alignItems"],"mappings":"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","sourcesContent":["\n// Pessoa A linha 15\n// Pessoa B linha 29\n\nimport React, { useState } from \"react\";\nimport { View, Text, TextInput, StyleSheet, TouchableOpacity, Alert, Button } from 'react-native'\n\nexport default function App() {\n\n    const [peso, setPeso] = useState('');\n    const [altura, setAltura] = useState('');\n\n    const handleSubmit = () => {\n        if (peso == '' || altura == '') {\n            Alert.alert('Erro', 'Preencha todos os campos!')\n        } else {\n            const imc = peso / (altura * altura);\n            if (imc < 18.6) {\n                Alert.alert('Abaixo do peso', 'IMC: ' + imc.toFixed(2))\n            } else if (imc >= 18.6 && imc <= 24.9) {\n                Alert.alert('Peso normal', 'IMC: ' + imc.toFixed(2))\n            } else if (imc >= 25) {\n                Alert.alert('Sobrepeso', 'IMC: ' + imc.toFixed(2))\n            }\n        }\n    };\n\n    return (\n\n      <View style={styles.container}>\n            <Text style={styles.title}>Calculadora de IMC</Text>\n            <TextInput style={styles.input} placeholder=\"Peso(Kg)\" placeholderTextColor=\"#999\" keyboardType=\"numeric\" maxLength={3} value={peso} onChangeText={setPeso} />\n            <TextInput style={styles.input} placeholder=\"Altura(m)\" placeholderTextColor=\"#999\" keyboardType=\"numbers-and-punctuation\" maxLength={4} value={altura} onChangeText={setAltura} />\n            <Button title=\"Calcular\" onPress={handleSubmit} />\n            <TouchableOpacity style={styles.button} onPress={handleSubmit}>\n                <Text style={styles.buttonText}>Calcular</Text>\n            </TouchableOpacity>\n      </View>\n\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n    },\n    title: {\n        textAlign: 'center',\n        marginTop: 25,\n        fontSize: 30,\n    },\n    input: {\n        backgroundColor: '#121212',\n        borderRadius: 10,\n        margin: 15,\n        padding: 10,\n        color: '#FFF',\n        fontSize: 23,\n    },\n    button: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        margin: 15,\n        backgroundColor: '#41Aef4',\n        padding: 10,\n    },\n    buttonText: {\n        color: '#FFF',\n        fontSize: 25,\n    }\n})\n\n/*\n                Pessoa B\n\n<View style={styles.container}>\n    <Text style={styles.title}>Calculadora de IMC</Text>\n    <TextInput style={styles.input} placeholder=\"Peso\" placeholderTextColor=\"#999\" keyboardType=\"numeric\" maxLength={3} value={peso} onChangeText={setPeso} />\n    <TextInput style={styles.input} placeholder=\"Altura\" placeholderTextColor=\"#999\" keyboardType=\"numeric\" maxLength={3} value={altura} onChangeText={setAltura} />\n    <TouchableOpacity style={styles.button} onPress={handleSubmit}>\n        <Text style={styles.buttonText}>Calcular</Text>\n    </TouchableOpacity>\n</View>\nColoque aqui View, Text, TextInput, TouachableOpacity,\nquando utilizar o textInput pode mudar a cor do placeholder\npassando a seguinte propriedade >>> placeholderTextColor='#785463'\n*/"]},"metadata":{},"sourceType":"module"}